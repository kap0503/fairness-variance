Advances in the ANaConDA framework for dynamic analysis and testing of concurrent C/C++ programs.:
- https://doi.org/10.1145/3213846.3229505
- 2018
An empirical study on TensorFlow program bugs.:
- https://doi.org/10.1145/3213846.3213866
- 2018
Analyzing the analyzers - FlowDroid/IccTA, AmanDroid, and DroidSafe.:
- https://doi.org/10.1145/3213846.3213873
- 2018
Automated test mapping and coverage for network topologies.:
- https://doi.org/10.1145/3213846.3213859
- 2018
Automatically translating bug reports into test cases for mobile apps.:
- https://doi.org/10.1145/3213846.3213869
- 2018
Badger - complexity analysis with fuzzing and symbolic execution.:
- https://doi.org/10.1145/3213846.3213868
- 2018
Bench4BL - reproducibility study on the performance of IR-based bug localization.:
- https://doi.org/10.1145/3213846.3213856
- 2018
CiD - automating the detection of API-related compatibility issues in Android apps.:
- https://doi.org/10.1145/3213846.3213857
- 2018
Comparing developer-provided to user-provided tests for fault localization and automated program repair.:
- https://doi.org/10.1145/3213846.3213870
- 2018
Compiler fuzzing through deep learning.:
- https://doi.org/10.1145/3213846.3213848
- 2018
Deep specification mining.:
- https://doi.org/10.1145/3213846.3213876
- 2018
Eliminating timing side-channel leaks using program repair.:
- https://doi.org/10.1145/3213846.3213851
- 2018
Evaluating test-suite reduction in real software evolution.:
- https://doi.org/10.1145/3213846.3213875
- 2018
Exploiting community structure for floating-point precision tuning.:
- https://doi.org/10.1145/3213846.3213862
- 2018
Identifying implementation bugs in machine learning based image classifiers using metamorphic testing.:
- https://doi.org/10.1145/3213846.3213858
- 2018
LAND - a user-friendly and customizable test generation tool for Android apps.:
- https://doi.org/10.1145/3213846.3229500
- 2018
Lightweight verification of array indexing.:
- https://doi.org/10.1145/3213846.3213849
- 2018
Making data-driven porting decisions with Tuscan.:
- https://doi.org/10.1145/3213846.3213855
- 2018
MalViz - an interactive visualization tool for tracing malware.:
- https://doi.org/10.1145/3213846.3229501
- 2018
Managing concurrent testing of data race with ComRaDe.:
- https://doi.org/10.1145/3213846.3229502
- 2018
Mutode - generic JavaScript and Node.js mutation testing tool.:
- https://doi.org/10.1145/3213846.3229504
- 2018
OASIs - oracle assessment and improvement tool.:
- https://doi.org/10.1145/3213846.3229503
- 2018
PerfFuzz - automatically generating pathological inputs.:
- https://doi.org/10.1145/3213846.3213874
- 2018
Practical detection of concurrency issues at coding time.:
- https://doi.org/10.1145/3213846.3213853
- 2018
? Proceedings of the 27th ACM SIGSOFT International Symposium on Software Testing
  and Analysis, ISSTA 2018, Amsterdam, The Netherlands, July 16-21, 2018
: - http://dl.acm.org/citation.cfm?id=3213846
  - 2018
Remove RATs from your code - automated optimization of resource inefficient database writes for mobile applications.:
- https://doi.org/10.1145/3213846.3213865
- 2018
Repositioning of static analysis alarms.:
- https://doi.org/10.1145/3213846.3213850
- 2018
Safe and sound program analysis with Flix.:
- https://doi.org/10.1145/3213846.3213847
- 2018
Search-based detection of deviation failures in the migration of legacy spreadsheet applications.:
- https://doi.org/10.1145/3213846.3213861
- 2018
Shaping program repair space with existing patches and similar code.:
- https://doi.org/10.1145/3213846.3213871
- 2018
Shooting from the heap - ultra-scalable static analysis with heap snapshots.:
- https://doi.org/10.1145/3213846.3213860
- 2018
Static analysis of Java dynamic proxies.:
- https://doi.org/10.1145/3213846.3213864
- 2018
Symbolic path cost analysis for side-channel detection.:
- https://doi.org/10.1145/3213846.3213867
- 2018
Test case prioritization for acceptance testing of cyber physical systems - a multi-objective search-based approach.:
- https://doi.org/10.1145/3213846.3213852
- 2018
Test input generation with Java PathFinder - then and now (invited talk abstract).:
- https://doi.org/10.1145/3213846.3234687
- 2018
Test migration for efficient large-scale assessment of mobile app coding assignments.:
- https://doi.org/10.1145/3213846.3213854
- 2018
Tests from traces - automated unit test extraction for R.:
- https://doi.org/10.1145/3213846.3213863
- 2018
Translating code comments to procedure specifications.:
- https://doi.org/10.1145/3213846.3213872
- 2018
piCoq - parallel regression proving for large-scale verification projects.:
- https://doi.org/10.1145/3213846.3213877
- 2018
