A conservative algorithm for computing the flow of permissions in Java programs.:
- https://doi.org/10.1145/566172.566178
- 2002
Automatic extraction of object-oriented component interfaces.:
- https://doi.org/10.1145/566172.566212
- 2002
Automatic generation of program specifications.:
- https://doi.org/10.1145/566172.566213
- 2002
Conformance test experiments for distributed real-time systems.:
- https://doi.org/10.1145/566172.566196
- 2002
Continuity in sofware systems.:
- https://doi.org/10.1145/566172.566203
- 2002
Dependence analysis in reduction of requirement based test suites.:
- https://doi.org/10.1145/566172.566188
- 2002
Domain partitioning for open reactive systems.:
- https://doi.org/10.1145/566172.566179
- 2002
Effectively prioritizing tests in development environment.:
- https://doi.org/10.1145/566172.566187
- 2002
Efficient instrumentation for code coverage testing.:
- https://doi.org/10.1145/566172.566186
- 2002
Ericsson lab Italy - is ISSTA research relevant to industrial users?:
- https://doi.org/10.1145/566172.566208
- 2002
Evaluating the precision of static reference analysis using profiling.:
- https://doi.org/10.1145/566172.566176
- 2002
Experiences in automating the testing of SS7 signalling transfer points.:
- https://doi.org/10.1145/566172.566195
- 2002
Gamma system - continuous evolution of software after deployment.:
- https://doi.org/10.1145/566172.566182
- 2002
Generating finite state machines from abstract state machines.:
- https://doi.org/10.1145/566172.566190
- 2002
ISSTA 2002 panel - is ISSTA research relevant to industrial users?:
- https://doi.org/10.1145/566172.566205
- 2002
Investigating the use of analysis contracts to support fault isolation in object oriented code.:
- https://doi.org/10.1145/566172.566183
- 2002
Is ISSTA research relevant to industrial users? panel - ISSTA 2002 - empowering the developer to be a tester too!:
- https://doi.org/10.1145/566172.566206
- 2002
Is ISSTA research relevant to industry?:
- https://doi.org/10.1145/566172.566207
- 2002
Isolating failure-inducing thread schedules.:
- https://doi.org/10.1145/566172.566211
- 2002
Korat - automated testing based on Java predicates.:
- https://doi.org/10.1145/566172.566191
- 2002
Model checking Java programs using structural heuristics.:
- https://doi.org/10.1145/566172.566175
- 2002
On testing and conformance relations for UML statechart diagrams behaviours.:
- https://doi.org/10.1145/566172.566194
- 2002
PROPANE - an environment for examining the propagation of errors in software.:
- https://doi.org/10.1145/566172.566184
- 2002
Panel discussion - is ISSTA testing research relevant to industrial users?:
- https://doi.org/10.1145/566172.566209
- 2002
Parameterized object sensitivity for points-to and side-effect analyses for Java.:
- https://doi.org/10.1145/566172.566174
- 2002
Proceedings of the International Symposium on Software Testing and Analysis, ISSTA 2002, Roma, Italy, July 22-24, 2002:
- https://doi.org/10.1145/566172
- 2002
Projected state machine coverage for software testing.:
- https://doi.org/10.1145/566172.566192
- 2002
Refactoring design models for inductive verification.:
- https://doi.org/10.1145/566172.566198
- 2002
Rescaling reliability bounds for a new operational profile.:
- https://doi.org/10.1145/566172.566201
- 2002
Semi-proving - an integrated method based on global symbolic evaluation and metamorphic testing.:
- https://doi.org/10.1145/566172.566202
- 2002
Specification, verification, and synthesis of concurrency control components.:
- https://doi.org/10.1145/566172.566199
- 2002
The distirubtion of faults in a large industrial software system.:
- https://doi.org/10.1145/566172.566181
- 2002
