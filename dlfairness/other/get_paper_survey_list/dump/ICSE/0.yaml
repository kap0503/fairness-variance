A comprehensive study of autonomous vehicle bugs.:
- https://doi.org/10.1145/3377811.3380397
- 2020
A cost-efficient approach to building in continuous integration.:
- https://doi.org/10.1145/3377811.3380437
- 2020
A large-scale empirical study on vulnerability distribution within projects and the lessons learned.:
- https://doi.org/10.1145/3377811.3380923
- 2020
A novel approach to tracing safety requirements and state-based design models.:
- https://doi.org/10.1145/3377811.3380332
- 2020
A study on the lifecycle of flaky tests.:
- https://doi.org/10.1145/3377811.3381749
- 2020
A study on the prevalence of human values in software engineering publications, 2015 - 2018.:
- https://doi.org/10.1145/3377811.3380393
- 2020
A tale from the trenches - cognitive biases and software development.:
- https://doi.org/10.1145/3377811.3380330
- 2020
Accessibility issues in Android apps - state of affairs, sentiments, and ways forward.:
- https://doi.org/10.1145/3377811.3380392
- 2020
Adapting requirements models to varying environments.:
- https://doi.org/10.1145/3377811.3380927
- 2020
An empirical assessment of security risks of global Android banking apps.:
- https://doi.org/10.1145/3377811.3380417
- 2020
An empirical study on API parameter rules.:
- https://doi.org/10.1145/3377811.3380922
- 2020
An empirical study on program failures of deep learning jobs.:
- https://doi.org/10.1145/3377811.3380362
- 2020
An evidence-based inquiry into the use of grey literature in software engineering.:
- https://doi.org/10.1145/3377811.3380336
- 2020
An investigation of cross-project learning in online just-in-time software defect prediction.:
- https://doi.org/10.1145/3377811.3380403
- 2020
Ankou - guiding grey-box fuzzing towards combinatorial difference.:
- https://doi.org/10.1145/3377811.3380421
- 2020
Approximation-refinement testing of compute-intensive cyber-physical models - an approach based on system identification.:
- https://doi.org/10.1145/3377811.3380370
- 2020
Automatic testing and improvement of machine translation.:
- https://doi.org/10.1145/3377811.3380420
- 2020
Automatically testing string solvers.:
- https://doi.org/10.1145/3377811.3380398
- 2020
BCFA - bespoke control flow analysis for CFA at scale.:
- https://doi.org/10.1145/3377811.3380435
- 2020
Big code != big vocabulary - open-vocabulary models for source code.:
- https://doi.org/10.1145/3377811.3380342
- 2020
Burn after reading - a shadow stack with microsecond-level runtime rerandomization for protecting return addresses.:
- https://doi.org/10.1145/3377811.3380439
- 2020
CC2Vec - distributed representations of code changes.:
- https://doi.org/10.1145/3377811.3380361
- 2020
CPC - automatically classifying and propagating natural language comments via program analysis.:
- https://doi.org/10.1145/3377811.3380427
- 2020
Caspar - extracting and synthesizing user stories of problems from app reviews.:
- https://doi.org/10.1145/3377811.3380924
- 2020
Causal testing - understanding defects&apos; root causes.:
- https://doi.org/10.1145/3377811.3380377
- 2020
Co-evolving code with evolving metamodels.:
- https://doi.org/10.1145/3377811.3380324
- 2020
Collaborative bug finding for Android apps.:
- https://doi.org/10.1145/3377811.3380349
- 2020
ComboDroid - generating high-quality test inputs for Android apps via use case combinations.:
- https://doi.org/10.1145/3377811.3380382
- 2020
Comparing formal tools for system design - a judgment study.:
- https://doi.org/10.1145/3377811.3380373
- 2020
Conquering the extensional scalability problem for value-flow analysis frameworks.:
- https://doi.org/10.1145/3377811.3380346
- 2020
Context-aware in-process crowdworker recommendation.:
- https://doi.org/10.1145/3377811.3380380
- 2020
DLFix - context-based code transformation learning for automated program repair.:
- https://doi.org/10.1145/3377811.3380345
- 2020
Debugging inputs.:
- https://doi.org/10.1145/3377811.3380329
- 2020
DeepBillboard - systematic physical-world testing of autonomous driving systems.:
- https://doi.org/10.1145/3377811.3380422
- 2020
Demystify official API usage directives with crowdsourced API misuse scenarios, erroneous code examples and patches.:
- https://doi.org/10.1145/3377811.3380430
- 2020
Detection of hidden feature requests from massive chat messages via deep siamese network.:
- https://doi.org/10.1145/3377811.3380356
- 2020
Dissector - input validation for deep learning applications by crossing-layer dissection.:
- https://doi.org/10.1145/3377811.3380379
- 2020
Efficient generation of error-inducing floating-point inputs via symbolic execution.:
- https://doi.org/10.1145/3377811.3380359
- 2020
Empirical review of automated analysis tools on 47, 587 Ethereum smart contracts.:
- https://doi.org/10.1145/3377811.3380364
- 2020
Engineering gender-inclusivity into software - ten teams&apos; tales from the trenches.:
- https://doi.org/10.1145/3377811.3380371
- 2020
Establishing multilevel test-to-code traceability links.:
- https://doi.org/10.1145/3377811.3380921
- 2020
Explaining pair programming session dynamics from knowledge gaps.:
- https://doi.org/10.1145/3377811.3380925
- 2020
Extracting taint specifications for JavaScript libraries.:
- https://doi.org/10.1145/3377811.3380390
- 2020
Finding client-side business flow tampering vulnerabilities.:
- https://doi.org/10.1145/3377811.3380355
- 2020
Fuzz testing based data augmentation to improve robustness of deep neural networks.:
- https://doi.org/10.1145/3377811.3380415
- 2020
Gang of eight - a defect taxonomy for infrastructure as code scripts.:
- https://doi.org/10.1145/3377811.3380409
- 2020
Gap between theory and practice - an empirical study of security patches in solidity.:
- https://doi.org/10.1145/3377811.3380424
- 2020
HARP - holistic analysis for refactoring Python-based analytics programs.:
- https://doi.org/10.1145/3377811.3380434
- 2020
Heaps&apos;n leaks - how heap snapshots improve Android taint analysis.:
- https://doi.org/10.1145/3377811.3380438
- 2020
Here we go again - why is it difficult for developers to learn another programming language?:
- https://doi.org/10.1145/3377811.3380352
- 2020
HeteroRefactor - refactoring for heterogeneous computing with FPGA.:
- https://doi.org/10.1145/3377811.3380340
- 2020
How Android developers handle evolution-induced API compatibility issues - a large-scale study.:
- https://doi.org/10.1145/3377811.3380357
- 2020
How do companies collaborate in open source ecosystems? - an empirical study of OpenStack.:
- https://doi.org/10.1145/3377811.3380376
- 2020
How does misconfiguration of analytic services compromise mobile privacy?:
- https://doi.org/10.1145/3377811.3380401
- 2020
How has forking changed in the last 20 years? - a study of hard forks on GitHub.:
- https://doi.org/10.1145/3377811.3380412
- 2020
How software practitioners use informal local meetups to share software engineering knowledge.:
- https://doi.org/10.1145/3377811.3380333
- 2020
How to not get rich - an empirical study of donations in open source.:
- https://doi.org/10.1145/3377811.3380410
- 2020
HyDiff - hybrid differential software analysis.:
- https://doi.org/10.1145/3377811.3380363
- 2020
ICSE &apos;20 - 42nd International Conference on Software Engineering, Seoul, South Korea, 27 June - 19 July, 2020:
- https://doi.org/10.1145/3377811
- 2020
Impact analysis of cross-project bugs on software ecosystems.:
- https://doi.org/10.1145/3377811.3380442
- 2020
Importance-driven deep learning system testing.:
- https://doi.org/10.1145/3377811.3380391
- 2020
Improving data scientist efficiency with provenance.:
- https://doi.org/10.1145/3377811.3380366
- 2020
Improving the effectiveness of traceability link recovery using hierarchical bayesian networks.:
- https://doi.org/10.1145/3377811.3380418
- 2020
Interpreting cloud computer vision pain-points - a mining study of stack overflow.:
- https://doi.org/10.1145/3377811.3380404
- 2020
Is rust used safely by software developers?:
- https://doi.org/10.1145/3377811.3380413
- 2020
JVM fuzzing for JIT-induced side-channel detection.:
- https://doi.org/10.1145/3377811.3380432
- 2020
Lazy product discovery in huge configuration spaces.:
- https://doi.org/10.1145/3377811.3380372
- 2020
Learning from, understanding, and supporting DevOps artifacts for docker.:
- https://doi.org/10.1145/3377811.3380406
- 2020
Learning-to-rank vs ranking-to-learn - strategies for regression testing in continuous integration.:
- https://doi.org/10.1145/3377811.3380369
- 2020
Low-overhead deadlock prediction.:
- https://doi.org/10.1145/3377811.3380367
- 2020
Managing data constraints in database-backed web applications.:
- https://doi.org/10.1145/3377811.3380375
- 2020
MemLock - memory usage guided fuzzing.:
- https://doi.org/10.1145/3377811.3380396
- 2020
Misbehaviour prediction for autonomous driving systems.:
- https://doi.org/10.1145/3377811.3380353
- 2020
Mitigating turnover with code review recommendation - balancing expertise, workload, and knowledge distribution.:
- https://doi.org/10.1145/3377811.3380335
- 2020
Multiple-entry testing of Android applications by constructing activity launching contexts.:
- https://doi.org/10.1145/3377811.3380347
- 2020
Near-duplicate detection in web app model inference.:
- https://doi.org/10.1145/3377811.3380416
- 2020
Neurological divide - an fMRI study of prose and code writing.:
- https://doi.org/10.1145/3377811.3380348
- 2020
On learning meaningful assert statements for unit test cases.:
- https://doi.org/10.1145/3377811.3380429
- 2020
? On the efficiency of test suite based program repair - A Systematic Assessment of
  16 Automated Repair Systems for Java Programs.
: - https://doi.org/10.1145/3377811.3380338
  - 2020
On the recall of static call graph construction in practice.:
- https://doi.org/10.1145/3377811.3380441
- 2020
One size does not fit all - a grounded theory and online survey study of developer preferences for security warning types.:
- https://doi.org/10.1145/3377811.3380387
- 2020
POSIT - simultaneously tagging natural and programming languages.:
- https://doi.org/10.1145/3377811.3380440
- 2020
Pipelining bottom-up data flow analysis.:
- https://doi.org/10.1145/3377811.3380425
- 2020
Planning for untangling - predicting the difficulty of merge conflicts.:
- https://doi.org/10.1145/3377811.3380344
- 2020
Practical fault detection in puppet programs.:
- https://doi.org/10.1145/3377811.3380384
- 2020
Predicting developers&apos; negative feelings about code review.:
- https://doi.org/10.1145/3377811.3380414
- 2020
Primers or reminders? - the effects of existing review comments on code review.:
- https://doi.org/10.1145/3377811.3380385
- 2020
Quickly generating diverse valid test inputs with reinforcement learning.:
- https://doi.org/10.1145/3377811.3380399
- 2020
Recognizing developers&apos; emotions while programming.:
- https://doi.org/10.1145/3377811.3380374
- 2020
Reducing run-time adaptation space via analysis of possible utility bounds.:
- https://doi.org/10.1145/3377811.3380365
- 2020
ReluDiff - differential verification of deep neural networks.:
- https://doi.org/10.1145/3377811.3380337
- 2020
Repairing deep neural networks - fix patterns and challenges.:
- https://doi.org/10.1145/3377811.3380378
- 2020
Retrieval-based neural source code summarization.:
- https://doi.org/10.1145/3377811.3380383
- 2020
Revealing injection vulnerabilities by leveraging existing tests.:
- https://doi.org/10.1145/3377811.3380326
- 2020
RoScript - a visual script driven truly non-intrusive robotic testing system for touch screen applications.:
- https://doi.org/10.1145/3377811.3380431
- 2020
SAVER - scalable, precise, and safe memory-error repair.:
- https://doi.org/10.1145/3377811.3380323
- 2020
SLACC - simion-based language agnostic code clones.:
- https://doi.org/10.1145/3377811.3380407
- 2020
SLEMI - equivalence modulo input (EMI) based mutation of CPS models for finding compiler bugs in Simulink.:
- https://doi.org/10.1145/3377811.3380381
- 2020
Scaling open source communities - an empirical study of the Linux kernel.:
- https://doi.org/10.1145/3377811.3380920
- 2020
"Schr\xF6dinger&apos;s security - opening the box on app developers&apos; security rationale.":
- https://doi.org/10.1145/3377811.3380394
- 2020
Securing unsafe rust programs with XRust.:
- https://doi.org/10.1145/3377811.3380325
- 2020
Seenomaly - vision-based linting of GUI animation effects against design-don&apos;t guidelines.:
- https://doi.org/10.1145/3377811.3380411
- 2020
Simulee - detecting CUDA synchronization bugs via memory-access modeling.:
- https://doi.org/10.1145/3377811.3380358
- 2020
Software documentation - the practitioners&apos; perspective.:
- https://doi.org/10.1145/3377811.3380405
- 2020
Software visualization and deep transfer learning for effective software defect prediction.:
- https://doi.org/10.1145/3377811.3380389
- 2020
SpecuSym - speculative symbolic execution for cache timing leak detection.:
- https://doi.org/10.1145/3377811.3380428
- 2020
Structure-invariant testing for machine translation.:
- https://doi.org/10.1145/3377811.3380339
- 2020
Studying the use of Java logging utilities in the wild.:
- https://doi.org/10.1145/3377811.3380408
- 2020
Suggesting natural method names to check name consistencies.:
- https://doi.org/10.1145/3377811.3380926
- 2020
Symbolic verification of message passing interface programs.:
- https://doi.org/10.1145/3377811.3380419
- 2020
TRADER - trace divergence analysis and embedding regulation for debugging recurrent neural networks.:
- https://doi.org/10.1145/3377811.3380423
- 2020
Tailoring programs for static analysis via program transformation.:
- https://doi.org/10.1145/3377811.3380343
- 2020
Taming behavioral backward incompatibilities via cross-project testing and analysis.:
- https://doi.org/10.1145/3377811.3380436
- 2020
Targeted greybox fuzzing with static lookahead analysis.:
- https://doi.org/10.1145/3377811.3380388
- 2020
Taxonomy of real faults in deep learning systems.:
- https://doi.org/10.1145/3377811.3380395
- 2020
Testing DNN image classifiers for confusion &amp; bias errors.:
- https://doi.org/10.1145/3377811.3380400
- 2020
Testing file system implementations on layered models.:
- https://doi.org/10.1145/3377811.3380350
- 2020
Time-travel testing of Android apps.:
- https://doi.org/10.1145/3377811.3380402
- 2020
Towards characterizing adversarial defects of deep learning software from the lens of uncertainty.:
- https://doi.org/10.1145/3377811.3380368
- 2020
Towards the use of the readily available tests from the release pipeline as performance tests - are we there yet?:
- https://doi.org/10.1145/3377811.3380351
- 2020
Translating video recordings of mobile app usages into replayable scenarios.:
- https://doi.org/10.1145/3377811.3380328
- 2020
Typestate-guided fuzzer for discovering use-after-free vulnerabilities.:
- https://doi.org/10.1145/3377811.3380386
- 2020
Unblind your apps - predicting natural-language labels for mobile GUI components by deep learning.:
- https://doi.org/10.1145/3377811.3380327
- 2020
? Understanding the automated parameter optimization on transfer learning for cross-project
  defect prediction - an empirical study.
: - https://doi.org/10.1145/3377811.3380360
  - 2020
Unsuccessful story about few shot malware family classification and siamese network to the rescue.:
- https://doi.org/10.1145/3377811.3380354
- 2020
Verifying object construction.:
- https://doi.org/10.1145/3377811.3380341
- 2020
Watchman - monitoring dependency conflicts for Python library ecosystem.:
- https://doi.org/10.1145/3377811.3380426
- 2020
When APIs are intentionally bypassed - an exploratory study of API workarounds.:
- https://doi.org/10.1145/3377811.3380433
- 2020
White-box fairness testing through adversarial sampling.:
- https://doi.org/10.1145/3377811.3380331
- 2020
sFuzz - an efficient adaptive fuzzer for solidity smart contracts.:
- https://doi.org/10.1145/3377811.3380334
- 2020
