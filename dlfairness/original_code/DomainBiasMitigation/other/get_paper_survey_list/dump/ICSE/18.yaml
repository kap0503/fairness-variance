3rd workshop on software engineering over the Internet.:
- https://doi.org/10.1145/337180.337826
- 2000
A case study - demands on component-based development.:
- https://doi.org/10.1145/337180.337185
- 2000
A case study in root cause defect analysis.:
- https://doi.org/10.1145/337180.337232
- 2000
A case study of open source software development - the Apache server.:
- https://doi.org/10.1145/337180.337209
- 2000
A culture-centered multilevel software process cycle model (poster).:
- https://doi.org/10.1145/337180.337631
- 2000
A formal approach for designing CORBA based applications.:
- https://doi.org/10.1145/337180.337202
- 2000
A logical framework for design composition.:
- https://doi.org/10.1145/337180.337542
- 2000
A replicated assessment and comparison of common software cost modeling techniques.:
- https://doi.org/10.1145/337180.337223
- 2000
A software engineering approach and tool set for developing Internet applications.:
- https://doi.org/10.1145/337180.337619
- 2000
A study on exception detecton and handling using aspect-oriented programming.:
- https://doi.org/10.1145/337180.337229
- 2000
Achieving industrial relevance with academic excellence - lessons from the Oregon Master of Software engineering.:
- https://doi.org/10.1145/337180.337214
- 2000
Action Language - a specification language for model checking reactive systems.:
- https://doi.org/10.1145/337180.337219
- 2000
Advanced visual modeling (tutorial session) - beyond UML.:
- https://doi.org/10.1145/337180.337861
- 2000
Agent-oriented software engineering (workshop).:
- https://doi.org/10.1145/337180.337833
- 2000
Alcoa - the alloy constraint analyzer.:
- https://doi.org/10.1145/337180.337616
- 2000
Algorithmic cost estimation for software evolution.:
- https://doi.org/10.1145/337180.337587
- 2000
An approach to architectural analysis of product lines.:
- https://doi.org/10.1145/337180.337455
- 2000
An empirical study of regression test application frequency.:
- https://doi.org/10.1145/337180.337196
- 2000
An evaluation of the paired comparisons method for software sizing.:
- https://doi.org/10.1145/337180.337477
- 2000
An inheritance-based technique for building simulation proofs incrementally.:
- https://doi.org/10.1145/337180.337358
- 2000
An integrated cost model for software reuse.:
- https://doi.org/10.1145/337180.337199
- 2000
An interactive multimedia software house simulation for postgraduate software engineers.:
- https://doi.org/10.1145/337180.337528
- 2000
An overview of the ICSE 2000 workshop program.:
- https://doi.org/10.1145/337180.337816
- 2000
Analyzing software architectures with Argus-I.:
- https://doi.org/10.1145/337180.337624
- 2000
? Applying and adjusting a software process improvement model in practice - the use
  of the IDEAL model in a small software enterprise.
: - https://doi.org/10.1145/337180.337492
  - 2000
As strong as possible mobility (poster).:
- https://doi.org/10.1145/337180.337635
- 2000
Automated refactoring to introduce design patterns.:
- https://doi.org/10.1145/337180.337612
- 2000
Bandera - a source-level interface for model checking Java programs.:
- https://doi.org/10.1145/337180.337625
- 2000
Bandera - extracting finite-state models from Java source code.:
- https://doi.org/10.1145/337180.337234
- 2000
Beg, borrow, or steal (workshop session) - using multidisciplinary approaches in empirical software engineering research.:
- https://doi.org/10.1145/337180.337823
- 2000
Broad-spectrum studies of log file analysis.:
- https://doi.org/10.1145/337180.337194
- 2000
Building modular object-oriented systems with reusable collaborations (tutorial session).:
- https://doi.org/10.1145/337180.337838
- 2000
COTS Workshop - continuing collaborations for successful COTS development.:
- https://doi.org/10.1145/337180.337821
- 2000
Can quality graduate software engineering courses really be delivered asynchronously on-line?:
- https://doi.org/10.1145/337180.337512
- 2000
Characterization of risky projects based on project managers&apos; evaluation.:
- https://doi.org/10.1145/337180.337226
- 2000
Characterizing implicit information during peer review meetings.:
- https://doi.org/10.1145/337180.343189
- 2000
Component composition (poster).:
- https://doi.org/10.1145/337180.337627
- 2000
Component design of retargetable program analysis tools that reuse intermediate representations.:
- https://doi.org/10.1145/337180.337221
- 2000
Component-based software engineering and the issue of trust.:
- https://doi.org/10.1145/337180.337501
- 2000
Contribution to simplifying the mobile agent programming.:
- https://doi.org/10.1145/337180.337600
- 2000
Daily build and feature development in large distributed projects.:
- https://doi.org/10.1145/337180.337498
- 2000
Data mining library reuse patterns using generalized association rules.:
- https://doi.org/10.1145/337180.337200
- 2000
DeBOT - an approach for constructing high performance, scalable distributed object systems (poster).:
- https://doi.org/10.1145/337180.337638
- 2000
Deriving test plans from architectural descriptions.:
- https://doi.org/10.1145/337180.337205
- 2000
Design, specification, and verification of interactive systems (workshop session).:
- https://doi.org/10.1145/337180.337824
- 2000
Designing and analyzing software architectures using ABASs (tutorial session).:
- https://doi.org/10.1145/337180.337836
- 2000
Designing real-time and distributed applications with the UML (tutorial session).:
- https://doi.org/10.1145/337180.337855
- 2000
Developing and deploying software engineering courseware in an adaptable curriculum framework.:
- https://doi.org/10.1145/337180.337212
- 2000
Developing mobile computing applications with LIME.:
- https://doi.org/10.1145/337180.337626
- 2000
Dot com versus bricks and mortar - the impact of portal technology (abstract of invited presentation).:
- https://doi.org/10.1145/337180.337183
- 2000
Dragonfly - linking conceptual and implementation architectures of multiuser interactive systems.:
- https://doi.org/10.1145/337180.337208
- 2000
E-Slate - a software architectural style for end-user programming.:
- https://doi.org/10.1145/337180.337521
- 2000
Effort estimation from change records of evolving software (poster).:
- https://doi.org/10.1145/337180.337633
- 2000
Empirical investigation of a novel approach to check the integrity of software engineering measuring processes (poster).:
- https://doi.org/10.1145/337180.337629
- 2000
Estimating software fault-proneness for tuning testing activities.:
- https://doi.org/10.1145/337180.337592
- 2000
European experiences with software process improvement.:
- https://doi.org/10.1145/337180.337495
- 2000
Exploring O-O framework usage (poster).:
- https://doi.org/10.1145/337180.337639
- 2000
Extending requirement specifications using analogy.:
- https://doi.org/10.1145/337180.337190
- 2000
Fault tolerance via diversity against design faults (tutorial session) - design principles and reliability assessment.:
- https://doi.org/10.1145/337180.337864
- 2000
Formal verification applied to Java concurrent software.:
- https://doi.org/10.1145/337180.337594
- 2000
Fraunhofer - the German model for applied research and technology transfer.:
- https://doi.org/10.1145/337180.337443
- 2000
From MCC and CMM - technology transfers bright and dim.:
- https://doi.org/10.1145/337180.337375
- 2000
From research to reward - challenges in technology transfer.:
- https://doi.org/10.1145/337180.337467
- 2000
Galileo - a tool built from mass-market applications.:
- https://doi.org/10.1145/337180.337622
- 2000
Generating statechart designs from scenarios.:
- https://doi.org/10.1145/337180.337217
- 2000
Graphical animation of behavior models.:
- https://doi.org/10.1145/337180.337368
- 2000
Grow fast, grow global - how the Irish software industry evolved to this business model.:
- https://doi.org/10.1145/337180.337480
- 2000
High-integrity code generation for state-based formalisms.:
- https://doi.org/10.1145/337180.337615
- 2000
Holmes - a system to support software product lines.:
- https://doi.org/10.1145/337180.337641
- 2000
Hybrid domain representation archive (HyDRA) for requirements model synthesis across viewpoints (poster).:
- https://doi.org/10.1145/337180.337636
- 2000
Hyper/J - multi-dimensional separation of concerns for Java.:
- https://doi.org/10.1145/337180.337618
- 2000
Implementing incremental code migration with XML.:
- https://doi.org/10.1145/337180.337227
- 2000
Improvement of a configuration management system.:
- https://doi.org/10.1145/337180.337488
- 2000
Improving design and source code modularity using AspectJ (tutorial session).:
- https://doi.org/10.1145/337180.337848
- 2000
Improving problem-oriented mailing list archives with MCS.:
- https://doi.org/10.1145/337180.337193
- 2000
Improving software inspections by using reading techniques (tutorial session).:
- https://doi.org/10.1145/337180.337865
- 2000
Inference of message sequence charts.:
- https://doi.org/10.1145/337180.337215
- 2000
Integrating UML diagrams for production control systems.:
- https://doi.org/10.1145/337180.337207
- 2000
? Intellectual property protection for software in the United States and Europe (tutorial
  session) - the changing roles of patents and copyrights.
: - https://doi.org/10.1145/337180.337852
  - 2000
Introducng a software modeling concept in a medium-sized company.:
- https://doi.org/10.1145/337180.337461
- 2000
Introduction to CORBA (tutorial session).:
- https://doi.org/10.1145/337180.337839
- 2000
Investigating and improving a COTS-based software development.:
- https://doi.org/10.1145/337180.337186
- 2000
Is software education narrow-minded? A position paper.:
- https://doi.org/10.1145/337180.337451
- 2000
Is the new economy socially sustainable? (abstract of invited presentation).:
- https://doi.org/10.1145/337180.337181
- 2000
? It&apos;s engineering Jim ... but not as we know it - software engineering - solution
  to the software crisis, or part of the problem?
: - https://doi.org/10.1145/337180.337191
  - 2000
LIGHTVIEWS - visual interactive Internet environment for learning OO software testing.:
- https://doi.org/10.1145/337180.337532
- 2000
Legacy systems migration in CelLEST.:
- https://doi.org/10.1145/337180.337645
- 2000
Lessons learned from teaching reflective software engineering using the Leap toolkit.:
- https://doi.org/10.1145/337180.337508
- 2000
Light-weight context recovery for efficient and accurate program analyses.:
- https://doi.org/10.1145/337180.337222
- 2000
Little-JIL/Juliette - a process definition language and interpreter.:
- https://doi.org/10.1145/337180.337623
- 2000
Managing software artifacts on the Web with Labyrinth.:
- https://doi.org/10.1145/337180.337621
- 2000
Modeling deployment and configuration of CORBA systems with UML (poster).:
- https://doi.org/10.1145/337180.337634
- 2000
Moving from ISO9000 to higher levels of the CMM (tutorial session).:
- https://doi.org/10.1145/337180.337840
- 2000
Multibook&apos;s test environment.:
- https://doi.org/10.1145/337180.337514
- 2000
Multiple mass-market applications as components.:
- https://doi.org/10.1145/337180.337210
- 2000
Multivariate visualization in observation-based testing.:
- https://doi.org/10.1145/337180.337195
- 2000
Object model resurrection - an object oriented maintenance activity.:
- https://doi.org/10.1145/337180.337218
- 2000
Object-oriented inspection in the face of delocalisation.:
- https://doi.org/10.1145/337180.337343
- 2000
PPT - a COTS integration case study.:
- https://doi.org/10.1145/337180.337187
- 2000
Planning realistic schedules using software architecture (tutorial session).:
- https://doi.org/10.1145/337180.337843
- 2000
Platform-independent and tool-neutral test descriptions for automated software testing.:
- https://doi.org/10.1145/337180.337598
- 2000
Principled design of the modern Web architecture.:
- https://doi.org/10.1145/337180.337228
- 2000
Proceedings of the 22nd International Conference on on Software Engineering, ICSE 2000, Limerick Ireland, June 4-11, 2000.:
- http://dl.acm.org/citation.cfm?id=336512
- 2000
Process engineering with SpearmintTM/EPG.:
- https://doi.org/10.1145/337180.337646
- 2000
Producing more reliable software - mature software engineering process vs. state-of-the-art technology?:
- https://doi.org/10.1145/337180.337192
- 2000
Product-line architectures, aspects, and reuse (tutorial session).:
- https://doi.org/10.1145/337180.337860
- 2000
Prompter - a project planning assistant.:
- https://doi.org/10.1145/337180.337643
- 2000
Quickly detecting relevant program invariants.:
- https://doi.org/10.1145/337180.337240
- 2000
Requirements engineering for product families.:
- https://doi.org/10.1145/337180.337189
- 2000
Requirements engineering in the year 00 - a research perspective.:
- https://doi.org/10.1145/337180.337184
- 2000
Scalability issues in CORBA-based systems (tutorial session).:
- https://doi.org/10.1145/337180.337849
- 2000
Second ICSE Workshop on Web Engineering.:
- https://doi.org/10.1145/337180.337818
- 2000
Shortages of qualified software engineering faculty and practitioners (panel session) - challenges in breaking the cycle.:
- https://doi.org/10.1145/337180.337504
- 2000
Simulation in software engineering training.:
- https://doi.org/10.1145/337180.337203
- 2000
Software development engineer in Microsoft - a subjective view of soft skills required.:
- https://doi.org/10.1145/337180.337445
- 2000
Software evolution in componentware using requirements/assurances contracts.:
- https://doi.org/10.1145/337180.337198
- 2000
Software needs engineering - a position paper.:
- https://doi.org/10.1145/337180.337446
- 2000
Software process improvement (tutorial session) - best practices and lessons learned.:
- https://doi.org/10.1145/337180.337853
- 2000
Software process improvement by object technology (ESSI PIE 27785 -- SPOT).:
- https://doi.org/10.1145/337180.337497
- 2000
Software product lines - economics, architectures, and applications (workshop).:
- https://doi.org/10.1145/337180.337832
- 2000
Software reliability (tutorial session) - basic concepts and assessment methods.:
- https://doi.org/10.1145/337180.337858
- 2000
Specifying and measuring quality in use (tutorial session).:
- https://doi.org/10.1145/337180.337834
- 2000
Spontaneous software - a Web-based, object computing paradigm.:
- https://doi.org/10.1145/337180.337603
- 2000
Supporting diversity with component frameworks as architectural elements.:
- https://doi.org/10.1145/337180.337188
- 2000
Supporting dynamic composition of components.:
- https://doi.org/10.1145/337180.337642
- 2000
Supporting dynamic distributed work processes with a component and event based approach.:
- https://doi.org/10.1145/337180.337596
- 2000
System development using application services over the Net (tutorial session).:
- https://doi.org/10.1145/337180.337856
- 2000
Technology transfer macro-process - a practical guide for the effective introduction of technology.:
- https://doi.org/10.1145/337180.337470
- 2000
Testing levels for object-oriented software.:
- https://doi.org/10.1145/337180.337197
- 2000
The 2nd International Workshop on Economics-Driven Software Engineering Research.:
- https://doi.org/10.1145/337180.337829
- 2000
The FUJABA environment.:
- https://doi.org/10.1145/337180.337620
- 2000
The First International Workshop on Automated Program Analysis, Testing and Verification.:
- https://doi.org/10.1145/337180.337819
- 2000
The ICSE2000 doctoral workshop.:
- https://doi.org/10.1145/337180.337538
- 2000
The Second International Symposium on Constructing Software Engineering Tools (CoSET2000).:
- https://doi.org/10.1145/337180.337822
- 2000
The future of software (abstract of invited presentation).:
- https://doi.org/10.1145/337180.337182
- 2000
The implication of different learning styles on the modeling of object-oriented systems (poster).:
- https://doi.org/10.1145/337180.337630
- 2000
The making of Orbix and the iPortal suite.:
- https://doi.org/10.1145/337180.337484
- 2000
The use of task analysis methods in support of the development of interactive systems (poster).:
- https://doi.org/10.1145/337180.337637
- 2000
Third eye - specification-based analysis of software execution traces (poster).:
- https://doi.org/10.1145/337180.337628
- 2000
Three approximation techniques for ASTRAL symbolic model checking of infinite state real-time systems.:
- https://doi.org/10.1145/337180.337220
- 2000
Towards a taxonomy of software connectors.:
- https://doi.org/10.1145/337180.337201
- 2000
Towards the principled design of software engineering diagrams.:
- https://doi.org/10.1145/337180.337371
- 2000
Tracking, predicting and assessing software reuse costs - an automated tool.:
- https://doi.org/10.1145/337180.337640
- 2000
Twenty dirty tricks to train software engineers.:
- https://doi.org/10.1145/337180.337204
- 2000
Understanding code mobility (tutorial session).:
- https://doi.org/10.1145/337180.337863
- 2000
Using application states in software testing (poster).:
- https://doi.org/10.1145/337180.337632
- 2000
Verification of time partitioning in the DEOS scheduler kernel.:
- https://doi.org/10.1145/337180.337364
- 2000
Visualizing software release histories with 3DSoftVis.:
- https://doi.org/10.1145/337180.337644
- 2000
WISE3 - the Third International Workshop on Intelligent Software Engineering (workshop session).:
- https://doi.org/10.1145/337180.337831
- 2000
WYSIWYT testing in the spreadsheet paradigm - an empirical evaluation.:
- https://doi.org/10.1145/337180.337206
- 2000
When the project absolutely must get done - marrying the organization chart with the precedence diagram.:
- https://doi.org/10.1145/337180.337475
- 2000
Who needs doctors? (abstract of panel session).:
- https://doi.org/10.1145/337180.343193
- 2000
Why don&apos;t we get more (self?) respect - the positive impact of software engineering research upon practice.:
- https://doi.org/10.1145/337180.343191
- 2000
Workshop on multi-dimensional separation of concerns in software engineering.:
- https://doi.org/10.1145/337180.337827
- 2000
Workshop on standard exchange format (WoSEF).:
- https://doi.org/10.1145/337180.337825
- 2000
