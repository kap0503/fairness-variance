27th International Conference on Software Engineering (ICSE 2005), 15-21 May 2005, St. Louis, Missouri, USA:
- https://doi.org/10.1145/1062455
- 2005
2nd international workshop on software engineering for automotive systems.:
- https://doi.org/10.1145/1062455.1062620
- 2005
4th international workshop on scenarios and state machines - models, algorithms and tools (SCESM&apos;05).:
- https://doi.org/10.1145/1062455.1062622
- 2005
7th international workshop on economics-driven software engineering research.:
- https://doi.org/10.1145/1062455.1062610
- 2005
A B.S. degree in informatics - contextualizing software engineering education.:
- https://doi.org/10.1145/1062455.1062580
- 2005
A case study on the automated verification of groupware protocols.:
- https://doi.org/10.1145/1062455.1062560
- 2005
A cross-program investigation of students&apos; perceptions of agile methods.:
- https://doi.org/10.1145/1062455.1062543
- 2005
A framework of greedy methods for constructing interaction test suites.:
- https://doi.org/10.1145/1062455.1062495
- 2005
A multiple case study on the impact of pair programming on product quality.:
- https://doi.org/10.1145/1062455.1062545
- 2005
A quality-driven systematic approach for architecting distributed software applications.:
- https://doi.org/10.1145/1062455.1062508
- 2005
Addressing software dependability with statistical and machine learning techniques.:
- https://doi.org/10.1145/1062455.1062462
- 2005
Agile software reuse recommender.:
- https://doi.org/10.1145/1062455.1062586
- 2005
Agile, open source, distributed, and on-time - inside the eclipse development process.:
- https://doi.org/10.1145/1062455.1062459
- 2005
An adaptive object model with dynamic role binding.:
- https://doi.org/10.1145/1062455.1062498
- 2005
An architects guide to enterprise application integration with J2EE and .NET.:
- https://doi.org/10.1145/1062455.1062638
- 2005
An empirical evaluation of test case filtering techniques based on exercising complex information flows.:
- https://doi.org/10.1145/1062455.1062531
- 2005
An empirical study of fault localization for end-user programmers.:
- https://doi.org/10.1145/1062455.1062523
- 2005
An infrastructure for development of object-oriented, multi-level configuration management services.:
- https://doi.org/10.1145/1062455.1062504
- 2005
Aspect-oriented programming and modular reasoning.:
- https://doi.org/10.1145/1062455.1062482
- 2005
Aspect-oriented programming.:
- https://doi.org/10.1145/1062455.1062640
- 2005
Assurance patterns for distributed real-time embedded systems.:
- https://doi.org/10.1145/1062455.1062591
- 2005
Automated support for process-aware definition and execution of measurement plans.:
- https://doi.org/10.1145/1062455.1062507
- 2005
Automatic discovery of API-level exploits.:
- https://doi.org/10.1145/1062455.1062518
- 2005
Automatic generation and maintenance of correct spreadsheets.:
- https://doi.org/10.1145/1062455.1062494
- 2005
Automatic generation of rule-based software configuration management systems.:
- https://doi.org/10.1145/1062455.1062593
- 2005
Beyond computer science.:
- https://doi.org/10.1145/1062455.1062466
- 2005
Beyond templates - a study of clones in the STL and some general implications.:
- https://doi.org/10.1145/1062455.1062537
- 2005
Binary refactoring - improving code behind the scenes.:
- https://doi.org/10.1145/1062455.1062511
- 2005
CatchUp! - capturing and replaying refactorings to support API evolution.:
- https://doi.org/10.1145/1062455.1062512
- 2005
Check &apos;n&apos; crash - combining static checking and testing.:
- https://doi.org/10.1145/1062455.1062533
- 2005
Chianti - a change impact analysis tool for java programs.:
- https://doi.org/10.1145/1062455.1062598
- 2005
Classpects - unifying aspect- and object-oriented language design.:
- https://doi.org/10.1145/1062455.1062483
- 2005
Clinical requirements engineering.:
- https://doi.org/10.1145/1062455.1062467
- 2005
CodeCrawler - an information visualization tool for program comprehension.:
- https://doi.org/10.1145/1062455.1062602
- 2005
Component-based software engineering for embedded systems.:
- https://doi.org/10.1145/1062455.1062631
- 2005
Conducting empirical software engineering research in Nigeria - the posing problems.:
- https://doi.org/10.1145/1062455.1062576
- 2005
Continuous testing in eclipse.:
- https://doi.org/10.1145/1062455.1062600
- 2005
DEAS 2005 - workshop on the design and evolution of autonomic application software.:
- https://doi.org/10.1145/1062455.1062624
- 2005
Data structure repair using goal-directed reasoning.:
- https://doi.org/10.1145/1062455.1062499
- 2005
Deciding what to design - closing a gap in software engineering education.:
- https://doi.org/10.1145/1062455.1062563
- 2005
Demand-driven structural testing with dynamic instrumentation.:
- https://doi.org/10.1145/1062455.1062496
- 2005
Demonstration of JIVE and JOVE - Java as it happens.:
- https://doi.org/10.1145/1062455.1062597
- 2005
Dependability assessment of software-based systems - state of the art.:
- https://doi.org/10.1145/1062455.1062461
- 2005
Design mentoring based on design evolution analysis.:
- https://doi.org/10.1145/1062455.1062594
- 2005
Developing use cases and scenarios in the requirements process.:
- https://doi.org/10.1145/1062455.1062555
- 2005
Do students recognize ambiguity in software design? a multi-national, multi-institutional report.:
- https://doi.org/10.1145/1062455.1062567
- 2005
DynAlloy - upgrading alloy with actions.:
- https://doi.org/10.1145/1062455.1062535
- 2005
Efficient and precise dynamic impact analysis using execute-after sequences.:
- https://doi.org/10.1145/1062455.1062534
- 2005
Effort estimation of use cases for incremental large-scale software development.:
- https://doi.org/10.1145/1062455.1062516
- 2005
? Eliciting design requirements for maintenance-oriented IDEs - a detailed study of
  corrective and perfective maintenance tasks.
: - https://doi.org/10.1145/1062455.1062492
  - 2005
Emergent process design.:
- https://doi.org/10.1145/1062455.1062587
- 2005
Empirical validation of pair programming.:
- https://doi.org/10.1145/1062455.1062588
- 2005
Engineering safety-related requirements for software-intensive systems.:
- https://doi.org/10.1145/1062455.1062635
- 2005
Enriching software engineering courses with service-learning projects and the open-source approach.:
- https://doi.org/10.1145/1062455.1062566
- 2005
Experimental context classification - incentives and experience of subjects.:
- https://doi.org/10.1145/1062455.1062539
- 2005
Explicit assumptions enrich architectural models.:
- https://doi.org/10.1145/1062455.1062503
- 2005
Extending the discipline - how software can help or hinder human decision making (and vice-versa).:
- https://doi.org/10.1145/1062455.1062469
- 2005
Financially informed requirements prioritization.:
- https://doi.org/10.1145/1062455.1062630
- 2005
First international workshop on the modeling and analysis of concerns in software (MACS 2005).:
- https://doi.org/10.1145/1062455.1062611
- 2005
Five years of product line engineering in a small company.:
- https://doi.org/10.1145/1062455.1062551
- 2005
Fluent-based web animation - exploring goals for requirements validation.:
- https://doi.org/10.1145/1062455.1062603
- 2005
Global software development at siemens - experience from nine projects.:
- https://doi.org/10.1145/1062455.1062550
- 2005
Global talent and innovation.:
- https://doi.org/10.1145/1062455.1062458
- 2005
Goal-centric traceability for managing non-functional requirements.:
- https://doi.org/10.1145/1062455.1062525
- 2005
Helping users avoid bugs in GUI applications.:
- https://doi.org/10.1145/1062455.1062490
- 2005
How to teach software modeling.:
- https://doi.org/10.1145/1062455.1062564
- 2005
Human and social factors of software engineering.:
- https://doi.org/10.1145/1062455.1062612
- 2005
Improving software security with a C pointer analysis.:
- https://doi.org/10.1145/1062455.1062520
- 2005
Information systems development at the virtual global university - an experience report.:
- https://doi.org/10.1145/1062455.1062579
- 2005
International workshop on realising evidence-based software engineering.:
- https://doi.org/10.1145/1062455.1062613
- 2005
Introducing the puLSE approach to an embedded system population at testo AG.:
- https://doi.org/10.1145/1062455.1062552
- 2005
Introduction to Research Papers.:
- https://doi.org/10.1145/1062455.1062480
- 2005
Introduction to education and training track.:
- https://doi.org/10.1145/1062455.1062562
- 2005
Introduction to the experience reports track.:
- https://doi.org/10.1145/1062455.1062541
- 2005
Is mutation an appropriate tool for testing experiments?:
- https://doi.org/10.1145/1062455.1062530
- 2005
Journey of enlightenment - the evolution of development at Microsoft.:
- https://doi.org/10.1145/1062455.1062473
- 2005
Knowledge-based architectural adaptation management for self-adaptive systems.:
- https://doi.org/10.1145/1062455.1062592
- 2005
Locating causes of program failures.:
- https://doi.org/10.1145/1062455.1062522
- 2005
MSR 2005 international workshop on mining software repositories.:
- https://doi.org/10.1145/1062455.1062615
- 2005
? Main effects screening - a distributed continuous quality assurance process for
  monitoring performance degradation in evolving software systems.
: - https://doi.org/10.1145/1062455.1062515
  - 2005
Model-based testing.:
- https://doi.org/10.1145/1062455.1062636
- 2005
Modeling and implementing software architecture with acme and archJava.:
- https://doi.org/10.1145/1062455.1062604
- 2005
Models and processes for the evaluation of off-the-shelf components - MPEC&apos;05.:
- https://doi.org/10.1145/1062455.1062621
- 2005
Monitoring and control in scenario-based requirements analysis.:
- https://doi.org/10.1145/1062455.1062527
- 2005
Moving from a plan driven culture to agile development.:
- https://doi.org/10.1145/1062455.1062472
- 2005
Object naming analysis for reverse-engineered sequence diagrams.:
- https://doi.org/10.1145/1062455.1062510
- 2005
Observations and lessons learned from automated testing.:
- https://doi.org/10.1145/1062455.1062556
- 2005
On the education of future software engineers.:
- https://doi.org/10.1145/1062455.1062584
- 2005
One evaluation of model-based testing and its automation.:
- https://doi.org/10.1145/1062455.1062529
- 2005
Open source application spaces - the 5th workshop on open source software engineering.:
- https://doi.org/10.1145/1062455.1062619
- 2005
Predictor models in software engineering (PROMISE).:
- https://doi.org/10.1145/1062455.1062617
- 2005
Predictors of customer perceived software quality.:
- https://doi.org/10.1145/1062455.1062506
- 2005
Process issues in course projects.:
- https://doi.org/10.1145/1062455.1062574
- 2005
Re-engineering software architecture of home service robots - a case study.:
- https://doi.org/10.1145/1062455.1062547
- 2005
Real-time specification patterns.:
- https://doi.org/10.1145/1062455.1062526
- 2005
Requirements interaction management in an eXtreme programming environment - a case study.:
- https://doi.org/10.1145/1062455.1062544
- 2005
Research challenges of autonomic computing.:
- https://doi.org/10.1145/1062455.1062464
- 2005
Reverse engineering of object oriented code.:
- https://doi.org/10.1145/1062455.1062637
- 2005
Rules of thumb for secure software engineering.:
- https://doi.org/10.1145/1062455.1062626
- 2005
SQL DOM - compile time checking of dynamic SQL statements.:
- https://doi.org/10.1145/1062455.1062487
- 2005
Safe query objects - statically typed objects as remotely executable queries.:
- https://doi.org/10.1145/1062455.1062488
- 2005
Science of design.:
- https://doi.org/10.1145/1062455.1062478
- 2005
Second international workshop on software engineering for high performance computing system applications.:
- https://doi.org/10.1145/1062455.1062609
- 2005
Self-healing web service compositions.:
- https://doi.org/10.1145/1062455.1062589
- 2005
Silver bullet or fool&apos;s gold - supporting usability in open source software development.:
- https://doi.org/10.1145/1062455.1062468
- 2005
Software architecture in an open source world.:
- https://doi.org/10.1145/1062455.1062474
- 2005
Software engineering 2004 - ACM/IEEE-CS guidelines for undergraduate programs in software engineering.:
- https://doi.org/10.1145/1062455.1062571
- 2005
? Software engineering education in the era of outsourcing, distributed development,
  and open source software - challenges and opportunities.
: - https://doi.org/10.1145/1062455.1062581
  - 2005
Software engineering for large-scale multi-agent systems - SELMAS&apos;05.:
- https://doi.org/10.1145/1062455.1062608
- 2005
Software engineering for secure systems.:
- https://doi.org/10.1145/1062455.1062607
- 2005
Software test program - a software residency experience.:
- https://doi.org/10.1145/1062455.1062565
- 2005
Software visualization.:
- https://doi.org/10.1145/1062455.1062634
- 2005
Some myths of software engineering education.:
- https://doi.org/10.1145/1062455.1062570
- 2005
Sound methods and effective tools for model-based security engineering with UML.:
- https://doi.org/10.1145/1062455.1062519
- 2005
Spiral development of software-intensive systems of systems.:
- https://doi.org/10.1145/1062455.1062628
- 2005
Static analysis tools as early indicators of pre-release defect density.:
- https://doi.org/10.1145/1062455.1062558
- 2005
Story driven modeling - a practical guide to model driven software development.:
- https://doi.org/10.1145/1062455.1062632
- 2005
System challenges for ubiquitous &amp; pervasive computing.:
- https://doi.org/10.1145/1062455.1062463
- 2005
Teaching human aspects of software engineering.:
- https://doi.org/10.1145/1062455.1062583
- 2005
Test factoring - focusing test suites for the task at hand.:
- https://doi.org/10.1145/1062455.1062590
- 2005
Testing database transactions with AGENDA.:
- https://doi.org/10.1145/1062455.1062486
- 2005
The challenges of software engineering education.:
- https://doi.org/10.1145/1062455.1062578
- 2005
The concern manipulation environment.:
- https://doi.org/10.1145/1062455.1062599
- 2005
The first workshop on end-user software engineering.:
- https://doi.org/10.1145/1062455.1062623
- 2005
The fujaba real-time tool suite - model-driven development of safety-critical, real-time systems.:
- https://doi.org/10.1145/1062455.1062601
- 2005
The groupthink specification exercise.:
- https://doi.org/10.1145/1062455.1062568
- 2005
The making of a software engineer challenges for the educator.:
- https://doi.org/10.1145/1062455.1062577
- 2005
The role of a project-based capstone course.:
- https://doi.org/10.1145/1062455.1062582
- 2005
The software engineer and the development, management and use of intellectual property.:
- https://doi.org/10.1145/1062455.1062629
- 2005
The software engineering of agent-based intelligent adaptive systems.:
- https://doi.org/10.1145/1062455.1062627
- 2005
The value of a usability-supporting architectural pattern in software architecture design - a controlled experiment.:
- https://doi.org/10.1145/1062455.1062538
- 2005
Third international workshop on dynamic analysis(WODA 2005).:
- https://doi.org/10.1145/1062455.1062618
- 2005
Third workshop on software quality.:
- https://doi.org/10.1145/1062455.1062614
- 2005
Tool support for just-in-time architecture reconstruction and evaluation - an experience report.:
- https://doi.org/10.1145/1062455.1062548
- 2005
Towards an effective software engineering course project.:
- https://doi.org/10.1145/1062455.1062575
- 2005
Towards aspect weaving applications.:
- https://doi.org/10.1145/1062455.1062484
- 2005
Towards increasing the compatibility of student pair programmers.:
- https://doi.org/10.1145/1062455.1062572
- 2005
Transformations of software models into performance models.:
- https://doi.org/10.1145/1062455.1062639
- 2005
Transitions in programming models - 2.:
- https://doi.org/10.1145/1062455.1062457
- 2005
Understanding metamodeling.:
- https://doi.org/10.1145/1062455.1062633
- 2005
Use of relative code churn measures to predict system defect density.:
- https://doi.org/10.1145/1062455.1062514
- 2005
Using peer reviews in teaching framework development.:
- https://doi.org/10.1145/1062455.1062573
- 2005
Using structural context to recommend source code examples.:
- https://doi.org/10.1145/1062455.1062491
- 2005
Validation methods for calibrating software effort models.:
- https://doi.org/10.1145/1062455.1062559
- 2005
Verification and change-impact analysis of access-control policies.:
- https://doi.org/10.1145/1062455.1062502
- 2005
Verifying safety policies with size properties and alias controls.:
- https://doi.org/10.1145/1062455.1062500
- 2005
What you always wanted to know about agile methods but did not dare to ask.:
- https://doi.org/10.1145/1062455.1062641
- 2005
Where do you go when you&apos;re through the turnstile?:
- https://doi.org/10.1145/1062455.1062476
- 2005
Why use the model driven architecture to design and build distributed applications?:
- https://doi.org/10.1145/1062455.1062471
- 2005
Will earlier projects plus a disciplined process enforce SE principles throughout the CS curriculum?:
- https://doi.org/10.1145/1062455.1062569
- 2005
Workshop on advances in model-based software testing.:
- https://doi.org/10.1145/1062455.1062606
- 2005
Workshop on architecting dependable systems (WADS 2005).:
- https://doi.org/10.1145/1062455.1062616
- 2005
requirements uncertainty - influencing factors and concrete improvements.:
- https://doi.org/10.1145/1062455.1062554
- 2005
