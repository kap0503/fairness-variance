1st FME workshop on formal methods in software engineering (FormaliSE 2013).:
- https://doi.org/10.1109/ICSE.2013.6606766
- 2013
1st international workshop on assurance cases for software-intensive systems (ASSURE 2013).:
- https://doi.org/10.1109/ICSE.2013.6606759
- 2013
1st international workshop on combining modelling and search-based software engineering (CMSBSE 2013).:
- https://doi.org/10.1109/ICSE.2013.6606763
- 2013
1st international workshop on conducting empirical studies in industry (CESI 2013).:
- https://doi.org/10.1109/ICSE.2013.6606761
- 2013
1st international workshop on data analysis patterns in software engineering (DAPSE 2013).:
- https://doi.org/10.1109/ICSE.2013.6606765
- 2013
1st international workshop on live programming (LIVE 2013).:
- https://doi.org/10.1109/ICSE.2013.6606771
- 2013
1st international workshop on natural language analysis in software engineering (NaturaLiSE 2013).:
- https://doi.org/10.1109/ICSE.2013.6606775
- 2013
1st international workshop on release engineering (RELENG 2013).:
- https://doi.org/10.1109/ICSE.2013.6606779
- 2013
1st international workshop on the engineering of mobile-enabled systems (MOBS 2013).:
- https://doi.org/10.1109/ICSE.2013.6606773
- 2013
2nd SEMAT workshop on a general theory of software engineering (GTSE 2013).:
- https://doi.org/10.1109/ICSE.2013.6606769
- 2013
2nd international workshop on green and sustainable software (GREENS 2013).:
- https://doi.org/10.1109/ICSE.2013.6606768
- 2013
2nd international workshop on realizing artificial intelligence synergies in software engineering (RAISE 2013).:
- https://doi.org/10.1109/ICSE.2013.6606778
- 2013
2nd international workshop on software engineering challenges for the smart grid (SE4SG 2013).:
- https://doi.org/10.1109/ICSE.2013.6606783
- 2013
2nd international workshop on the twin peaks of requirements and architecture (TwinPeaks 2013).:
- https://doi.org/10.1109/ICSE.2013.6606785
- 2013
2nd international workshop on user evaluations for software engineering researchers (USER 2013).:
- https://doi.org/10.1109/ICSE.2013.6606786
- 2013
35th International Conference on Software Engineering, ICSE &apos;13, San Francisco, CA, USA, May 18-26, 2013:
- https://ieeexplore.ieee.org/xpl/conhome/6596173/proceeding
- 2013
3rd international workshop on collaborative teaching of globally distributed software development (CTGDSD 2013).:
- https://doi.org/10.1109/ICSE.2013.6606764
- 2013
3rd international workshop on developing tools as plug-ins (TOPI 2013).:
- https://doi.org/10.1109/ICSE.2013.6606784
- 2013
? 3rd international workshop on games and software engineering - engineering computer
  games to enable positive, progressive change (GAS 2013).
: - https://doi.org/10.1109/ICSE.2013.6606767
  - 2013
4th international workshop on emerging trends in software metrics (WETSoM 2013).:
- https://doi.org/10.1109/ICSE.2013.6606787
- 2013
4th international workshop on managing technical debt (MTD 2013).:
- https://doi.org/10.1109/ICSE.2013.6606774
- 2013
4th international workshop on product LinE approaches in software engineering (PLEASE 2013).:
- https://doi.org/10.1109/ICSE.2013.6606777
- 2013
4th international workshop on software engineering for sensor network applications (SESENA 2013).:
- https://doi.org/10.1109/ICSE.2013.6606782
- 2013
5th international workshop on modeling in software engineering (MiSE 2013).:
- https://doi.org/10.1109/ICSE.2013.6606772
- 2013
5th international workshop on principles of engineering service-oriented systems (PESOS 2013).:
- https://doi.org/10.1109/ICSE.2013.6606776
- 2013
5th international workshop on software engineering for computational science and engineering (SE-CSE 2013).:
- https://doi.org/10.1109/ICSE.2013.6606780
- 2013
5th international workshop on software engineering in health care (SEHC 2013).:
- https://doi.org/10.1109/ICSE.2013.6606781
- 2013
6th international workshop on cooperative and human aspects of software engineering (CHASE 2013).:
- https://doi.org/10.1109/ICSE.2013.6606762
- 2013
7th international workshop on software clones (IWSC 2013).:
- https://doi.org/10.1109/ICSE.2013.6606770
- 2013
8th international workshop on automation of software test (AST 2013).:
- https://doi.org/10.1109/ICSE.2013.6606760
- 2013
A case for human-driven software development.:
- https://doi.org/10.1109/ICSE.2013.6606685
- 2013
A characteristic study on failures of production distributed data-parallel programs.:
- https://doi.org/10.1109/ICSE.2013.6606646
- 2013
A framework for managing cloned product variants.:
- https://doi.org/10.1109/ICSE.2013.6606686
- 2013
A framework for self-healing software systems.:
- https://doi.org/10.1109/ICSE.2013.6606726
- 2013
A framework to evaluate software engineering student contests - evaluation and integration with academic programs.:
- https://doi.org/10.1109/ICSE.2013.6606658
- 2013
A hands-on Java PathFinder tutorial.:
- https://doi.org/10.1109/ICSE.2013.6606756
- 2013
A large scale Linux-kernel based benchmark for feature location research.:
- https://doi.org/10.1109/ICSE.2013.6606705
- 2013
A learning-based method for combining testing techniques.:
- https://doi.org/10.1109/ICSE.2013.6606560
- 2013
A proposal for the improvement of project&apos;s cost predictability using EVM and historical data of cost.:
- https://doi.org/10.1109/ICSE.2013.6606740
- 2013
A roadmap for software maintainability measurement.:
- https://doi.org/10.1109/ICSE.2013.6606742
- 2013
A study of enabling factors for rapid fielding - combined practices to balance speed and stability.:
- https://doi.org/10.1109/ICSE.2013.6606648
- 2013
A study of variability spaces in open source software.:
- https://doi.org/10.1109/ICSE.2013.6606715
- 2013
Agility at scale - economic governance, measured improvement, and disciplined delivery.:
- https://doi.org/10.1109/ICSE.2013.6606636
- 2013
Aluminum - principled scenario exploration through minimality.:
- https://doi.org/10.1109/ICSE.2013.6606569
- 2013
An approach for restructuring text content.:
- https://doi.org/10.1109/ICSE.2013.6606684
- 2013
An approach to documenting and evolving architectural design decisions.:
- https://doi.org/10.1109/ICSE.2013.6606720
- 2013
An empirical study on the developers&apos; perception of software coupling.:
- https://doi.org/10.1109/ICSE.2013.6606615
- 2013
An evaluation of interactive test-driven labs with WebIDE in CS0.:
- https://doi.org/10.1109/ICSE.2013.6606659
- 2013
An observable and controllable testing framework for modern systems.:
- https://doi.org/10.1109/ICSE.2013.6606721
- 2013
An ontology toolkit for problem domain concept location in program comprehension.:
- https://doi.org/10.1109/ICSE.2013.6606731
- 2013
Analysis of user comments - an approach for software requirements evolution.:
- https://doi.org/10.1109/ICSE.2013.6606604
- 2013
Analyzing the change-proneness of service-oriented systems from an industrial perspective.:
- https://doi.org/10.1109/ICSE.2013.6606718
- 2013
Are software patents bad? (keynote).:
- https://doi.org/10.1109/ICSE.2013.6606631
- 2013
Are your incoming aliases really necessary? counting the cost of object ownership.:
- https://doi.org/10.1109/ICSE.2013.6606620
- 2013
Assisting developers of big data analytics applications when deploying on hadoop clouds.:
- https://doi.org/10.1109/ICSE.2013.6606586
- 2013
Authentic assessment in software engineering education based on PBL principles - a case study in the telecom market.:
- https://doi.org/10.1109/ICSE.2013.6606655
- 2013
Automated diagnosis of software configuration errors.:
- https://doi.org/10.1109/ICSE.2013.6606577
- 2013
Automated reliability estimation over partial systematic explorations.:
- https://doi.org/10.1109/ICSE.2013.6606606
- 2013
Automated software architecture security risk analysis using formalized signatures.:
- https://doi.org/10.1109/ICSE.2013.6606612
- 2013
Automated testing of GUI applications - models, tools, and controlling flakiness.:
- https://doi.org/10.1109/ICSE.2013.6606750
- 2013
Automatic detection of performance deviations in the load testing of large scale systems.:
- https://doi.org/10.1109/ICSE.2013.6606651
- 2013
Automatic patch generation learned from human-written patches.:
- https://doi.org/10.1109/ICSE.2013.6606626
- 2013
Automatic query reformulations for text retrieval in software engineering.:
- https://doi.org/10.1109/ICSE.2013.6606630
- 2013
Automatic recovery from runtime failures.:
- https://doi.org/10.1109/ICSE.2013.6606624
- 2013
Automatic synthesis of modular connectors via composition of protocol mediation patterns.:
- https://doi.org/10.1109/ICSE.2013.6606546
- 2013
Automatic testing of sequential and concurrent substitutability.:
- https://doi.org/10.1109/ICSE.2013.6606574
- 2013
Beyond boolean product-line model checking - dealing with feature attributes and multi-features.:
- https://doi.org/10.1109/ICSE.2013.6606593
- 2013
Billions and billions of constraints - whitebox fuzz testing in production.:
- https://doi.org/10.1109/ICSE.2013.6606558
- 2013
Boa - a language and infrastructure for analyzing ultra-large-scale software repositories.:
- https://doi.org/10.1109/ICSE.2013.6606588
- 2013
Bottom-up model-driven development.:
- https://doi.org/10.1109/ICSE.2013.6606683
- 2013
Bridging the gap between the total and additional test-case prioritization strategies.:
- https://doi.org/10.1109/ICSE.2013.6606565
- 2013
Broken sets in software repository evolution.:
- https://doi.org/10.1109/ICSE.2013.6606587
- 2013
Build your own model checker in one month.:
- https://doi.org/10.1109/ICSE.2013.6606751
- 2013
Building high assurance secure applications using security patterns for capability-based platforms.:
- https://doi.org/10.1109/ICSE.2013.6606727
- 2013
Building test suites in social coding sites by leveraging drive-by commits.:
- https://doi.org/10.1109/ICSE.2013.6606680
- 2013
CEL - modeling everywhere.:
- https://doi.org/10.1109/ICSE.2013.6606708
- 2013
Cassandra - proactive conflict minimization through optimized task scheduling.:
- https://doi.org/10.1109/ICSE.2013.6606619
- 2013
Categorizing bugs with social networks - a case study on four open source software communities.:
- https://doi.org/10.1109/ICSE.2013.6606653
- 2013
Changeset based developer communication to detect software failures.:
- https://doi.org/10.1109/ICSE.2013.6606747
- 2013
Chronicler - lightweight recording to reproduce field failures.:
- https://doi.org/10.1109/ICSE.2013.6606582
- 2013
Comparative causality - explaining the differences between executions.:
- https://doi.org/10.1109/ICSE.2013.6606573
- 2013
Comparing multi-point stride coverage and dataflow coverage.:
- https://doi.org/10.1109/ICSE.2013.6606563
- 2013
Computational alignment of goals and scenarios for complex systems.:
- https://doi.org/10.1109/ICSE.2013.6606690
- 2013
ConfDiagnoser - an automated configuration error diagnosis tool for Java software.:
- https://doi.org/10.1109/ICSE.2013.6606737
- 2013
Controller synthesis - from modelling to enactment.:
- https://doi.org/10.1109/ICSE.2013.6606714
- 2013
Counter play-out - executing unrealizable scenario-based specifications.:
- https://doi.org/10.1109/ICSE.2013.6606570
- 2013
Coupling software architecture and human architecture for collaboration-aware system adaptation.:
- https://doi.org/10.1109/ICSE.2013.6606551
- 2013
Creating a shared understanding of testing culture on a social coding site.:
- https://doi.org/10.1109/ICSE.2013.6606557
- 2013
DRC - a detection tool for dangling references in PHP-based web applications.:
- https://doi.org/10.1109/ICSE.2013.6606702
- 2013
Data clone detection and visualization in spreadsheets.:
- https://doi.org/10.1109/ICSE.2013.6606575
- 2013
Data science for software engineering.:
- https://doi.org/10.1109/ICSE.2013.6606752
- 2013
Deciphering the story of software development through frequent pattern mining.:
- https://doi.org/10.1109/ICSE.2013.6606677
- 2013
Decision theoretic requirements prioritization - a two-step approach for sliding towards value realization.:
- https://doi.org/10.1109/ICSE.2013.6606746
- 2013
Departures from optimality - understanding human analyst&apos;s information foraging in assisted requirements tracing.:
- https://doi.org/10.1109/ICSE.2013.6606603
- 2013
Detecting deadlock in programs with data-centric synchronization.:
- https://doi.org/10.1109/ICSE.2013.6606578
- 2013
Detecting inconsistencies in wrappers - a case study.:
- https://doi.org/10.1109/ICSE.2013.6606652
- 2013
Detecting spurious counterexamples efficiently in abstract model checking.:
- https://doi.org/10.1109/ICSE.2013.6606566
- 2013
Developing verified programs with dafny.:
- https://doi.org/10.1109/ICSE.2013.6606754
- 2013
Discovering essential code elements in informal documentation.:
- https://doi.org/10.1109/ICSE.2013.6606629
- 2013
Distributed development considered harmful?:
- https://doi.org/10.1109/ICSE.2013.6606637
- 2013
Does bug prediction support human developers? findings from a google case study.:
- https://doi.org/10.1109/ICSE.2013.6606583
- 2013
Does scale really matter? ultra-large-scale systems seven years after the study (keynote).:
- https://doi.org/10.1109/ICSE.2013.6606633
- 2013
Drag-and-drop refactoring - intuitive and efficient program transformation.:
- https://doi.org/10.1109/ICSE.2013.6606548
- 2013
Dual ecological measures of focus in software development.:
- https://doi.org/10.1109/ICSE.2013.6606591
- 2013
Dynamic injection of sketching features into GEF based diagram editors.:
- https://doi.org/10.1109/ICSE.2013.6606628
- 2013
Dynamic synthesis of local time requirement for service composition.:
- https://doi.org/10.1109/ICSE.2013.6606600
- 2013
Efficient and change-resilient test automation - an industrial case study.:
- https://doi.org/10.1109/ICSE.2013.6606650
- 2013
Efficient construction of approximate call graphs for JavaScript IDE services.:
- https://doi.org/10.1109/ICSE.2013.6606621
- 2013
Efficient quality assurance of variability-intensive systems.:
- https://doi.org/10.1109/ICSE.2013.6606757
- 2013
Eliminative induction - a basis for arguing system confidence.:
- https://doi.org/10.1109/ICSE.2013.6606668
- 2013
Enabling a classroom design studio with a collaborative sketch design tool.:
- https://doi.org/10.1109/ICSE.2013.6606657
- 2013
Energy aware self-adaptation in mobile systems.:
- https://doi.org/10.1109/ICSE.2013.6606736
- 2013
Engineering adaptive privacy - on the role of privacy awareness requirements.:
- https://doi.org/10.1109/ICSE.2013.6606609
- 2013
Estimating mobile application energy consumption using program analysis.:
- https://doi.org/10.1109/ICSE.2013.6606555
- 2013
Estimating software-intensive projects in the absence of historical data.:
- https://doi.org/10.1109/ICSE.2013.6606643
- 2013
Evaluating usefulness of software metrics - an industrial experience report.:
- https://doi.org/10.1109/ICSE.2013.6606641
- 2013
Example-driven modeling - model = abstractions + examples.:
- https://doi.org/10.1109/ICSE.2013.6606696
- 2013
Expectations, outcomes, and challenges of modern code review.:
- https://doi.org/10.1109/ICSE.2013.6606617
- 2013
Explicating symbolic execution (xSymExe) - an evidence-based verification framework.:
- https://doi.org/10.1109/ICSE.2013.6606568
- 2013
Exploring the impact of inter-smell relations on software maintainability - an empirical study.:
- https://doi.org/10.1109/ICSE.2013.6606614
- 2013
Exploring the internal state of user interfaces by combining computer vision techniques with grammatical inference.:
- https://doi.org/10.1109/ICSE.2013.6606669
- 2013
Expositor - scriptable time-travel debugging with first-class traces.:
- https://doi.org/10.1109/ICSE.2013.6606581
- 2013
Fault comprehension for concurrent programs.:
- https://doi.org/10.1109/ICSE.2013.6606739
- 2013
Feedback-directed unit test generation for C/C++ using concolic execution.:
- https://doi.org/10.1109/ICSE.2013.6606559
- 2013
Formal specifications better than function points for code sizing.:
- https://doi.org/10.1109/ICSE.2013.6606692
- 2013
Fostering software quality assessment.:
- https://doi.org/10.1109/ICSE.2013.6606725
- 2013
From models to code and back - correct-by-construction code from UML and ALF.:
- https://doi.org/10.1109/ICSE.2013.6606744
- 2013
GROPG - a graphical on-phone debugger.:
- https://doi.org/10.1109/ICSE.2013.6606675
- 2013
Green streams for data-intensive software.:
- https://doi.org/10.1109/ICSE.2013.6606599
- 2013
GuideArch - guiding the exploration of architectural solution space under uncertainty.:
- https://doi.org/10.1109/ICSE.2013.6606550
- 2013
Guided test generation for web applications.:
- https://doi.org/10.1109/ICSE.2013.6606562
- 2013
How to effectively use topic models for software engineering tasks? an approach based on genetic algorithms.:
- https://doi.org/10.1109/ICSE.2013.6606598
- 2013
How, and why, process metrics are better.:
- https://doi.org/10.1109/ICSE.2013.6606589
- 2013
Human performance regression testing.:
- https://doi.org/10.1109/ICSE.2013.6606561
- 2013
Hunting for smells in natural language tests.:
- https://doi.org/10.1109/ICSE.2013.6606682
- 2013
Identifying failure inducing developer pairs within developer networks.:
- https://doi.org/10.1109/ICSE.2013.6606748
- 2013
Implementing database access control policy from unconstrained natural language text.:
- https://doi.org/10.1109/ICSE.2013.6606716
- 2013
Improving feature location practice with multi-faceted interactive exploration.:
- https://doi.org/10.1109/ICSE.2013.6606622
- 2013
Increasing anomaly handling efficiency in large organizations using applied machine learning.:
- https://doi.org/10.1109/ICSE.2013.6606717
- 2013
Industry involvement in ICT curriculum - a comparative survey.:
- https://doi.org/10.1109/ICSE.2013.6606666
- 2013
Inferring likely mappings between APIs.:
- https://doi.org/10.1109/ICSE.2013.6606554
- 2013
Informing development decisions - from data to information.:
- https://doi.org/10.1109/ICSE.2013.6606729
- 2013
Integrating systematic exploration, analysis, and maintenance in software development.:
- https://doi.org/10.1109/ICSE.2013.6606724
- 2013
Interaction-based test-suite minimization.:
- https://doi.org/10.1109/ICSE.2013.6606564
- 2013
Is time-zone proximity an advantage for software development? the case of the brazilian IT industry.:
- https://doi.org/10.1109/ICSE.2013.6606647
- 2013
It&apos;s not a bug, it&apos;s a feature - how misclassification impacts bug prediction.:
- https://doi.org/10.1109/ICSE.2013.6606585
- 2013
JITTAC - a just-in-time tool for architectural consistency.:
- https://doi.org/10.1109/ICSE.2013.6606700
- 2013
JST - an automatic test generation tool for industrial Java applications with strings.:
- https://doi.org/10.1109/ICSE.2013.6606649
- 2013
LAMBDAFICATOR - from imperative to functional programming through automated refactoring.:
- https://doi.org/10.1109/ICSE.2013.6606699
- 2013
LASE - an example-based program transformation tool for locating and applying systematic edits.:
- https://doi.org/10.1109/ICSE.2013.6606707
- 2013
LASE - locating and applying systematic edits by learning from examples.:
- https://doi.org/10.1109/ICSE.2013.6606596
- 2013
Learning revised models for planning in adaptive systems.:
- https://doi.org/10.1109/ICSE.2013.6606552
- 2013
Liberating pair programming research from the oppressive Driver/Observer regime.:
- https://doi.org/10.1109/ICSE.2013.6606678
- 2013
MCT - a tool for commenting programs by multimedia comments.:
- https://doi.org/10.1109/ICSE.2013.6606712
- 2013
MIDAS - a design quality assessment method for industrial software.:
- https://doi.org/10.1109/ICSE.2013.6606640
- 2013
Managing non-functional uncertainty via model-driven adaptivity.:
- https://doi.org/10.1109/ICSE.2013.6606549
- 2013
Measuring architecture quality by structure plus history analysis.:
- https://doi.org/10.1109/ICSE.2013.6606638
- 2013
Measuring the forensic-ability of audit logs for nonrepudiation.:
- https://doi.org/10.1109/ICSE.2013.6606732
- 2013
Memoise - a tool for memoized symbolic execution.:
- https://doi.org/10.1109/ICSE.2013.6606713
- 2013
Mining SQL injection and cross site scripting vulnerabilities using hybrid program analysis.:
- https://doi.org/10.1109/ICSE.2013.6606610
- 2013
Mitigating the obsolescence of specification models of service-based systems.:
- https://doi.org/10.1109/ICSE.2013.6606745
- 2013
NavClus - a graphical recommender for assisting code exploration.:
- https://doi.org/10.1109/ICSE.2013.6606706
- 2013
Normalizing source code vocabulary to support program comprehension and software quality.:
- https://doi.org/10.1109/ICSE.2013.6606723
- 2013
Not going to take this anymore - multi-objective overtime planning for software engineering projects.:
- https://doi.org/10.1109/ICSE.2013.6606592
- 2013
Novice understanding of program analysis tool notifications.:
- https://doi.org/10.1109/ICSE.2013.6606735
- 2013
Observable modified Condition/Decision coverage.:
- https://doi.org/10.1109/ICSE.2013.6606556
- 2013
Obtaining ground-truth software architectures.:
- https://doi.org/10.1109/ICSE.2013.6606639
- 2013
On extracting unit tests from interactive live programming sessions.:
- https://doi.org/10.1109/ICSE.2013.6606688
- 2013
On identifying user complaints of iOS apps.:
- https://doi.org/10.1109/ICSE.2013.6606749
- 2013
On the relationships between domain-based coupling and code clones - an exploratory study.:
- https://doi.org/10.1109/ICSE.2013.6606694
- 2013
On the value of user preferences in search-based software engineering - a case study in software product lines.:
- https://doi.org/10.1109/ICSE.2013.6606595
- 2013
POPT - a problem-oriented programming and testing approach for novice students.:
- https://doi.org/10.1109/ICSE.2013.6606660
- 2013
Partition-based regression verification.:
- https://doi.org/10.1109/ICSE.2013.6606576
- 2013
Path sensitive static analysis of web applications for remote code execution vulnerability detection.:
- https://doi.org/10.1109/ICSE.2013.6606611
- 2013
Pathways to technology transfer and adoption - achievements and challenges (mini-tutorial).:
- https://doi.org/10.1109/ICSE.2013.6606644
- 2013
PorchLight - a tag-based approach to bug triaging.:
- https://doi.org/10.1109/ICSE.2013.6606580
- 2013
Practical semantic test simplification.:
- https://doi.org/10.1109/ICSE.2013.6606671
- 2013
Predicting bug-fixing time - an empirical study of commercial software projects.:
- https://doi.org/10.1109/ICSE.2013.6606654
- 2013
Pricing crowdsourcing-based software development tasks.:
- https://doi.org/10.1109/ICSE.2013.6606679
- 2013
Program transformations to fix C integers.:
- https://doi.org/10.1109/ICSE.2013.6606625
- 2013
Quantitative program slicing - separating statements by relevance.:
- https://doi.org/10.1109/ICSE.2013.6606695
- 2013
Query quality prediction and reformulation for source code search - the refoqus tool.:
- https://doi.org/10.1109/ICSE.2013.6606704
- 2013
RADAR - a tool for debugging regression problems in C/C++ software.:
- https://doi.org/10.1109/ICSE.2013.6606711
- 2013
RERAN - timing- and touch-sensitive record and replay for Android.:
- https://doi.org/10.1109/ICSE.2013.6606553
- 2013
Reasoning with qualitative preferences to develop optimal component-based systems.:
- https://doi.org/10.1109/ICSE.2013.6606743
- 2013
? Reducing human effort and improving quality in peer code reviews using automatic
  static analysis and reviewer recommendation.
: - https://doi.org/10.1109/ICSE.2013.6606642
  - 2013
Reliability analysis in symbolic pathfinder.:
- https://doi.org/10.1109/ICSE.2013.6606608
- 2013
Reproducing and debugging field failures in house.:
- https://doi.org/10.1109/ICSE.2013.6606738
- 2013
Requirements modelling by synthesis of deontic input-output automata.:
- https://doi.org/10.1109/ICSE.2013.6606605
- 2013
Reverb - recommending code-related web pages.:
- https://doi.org/10.1109/ICSE.2013.6606627
- 2013
Robust reconfigurations of component assemblies.:
- https://doi.org/10.1109/ICSE.2013.6606547
- 2013
SNIPR - complementing code search with code retargeting capabilities.:
- https://doi.org/10.1109/ICSE.2013.6606733
- 2013
Safe software updates via multi-version execution.:
- https://doi.org/10.1109/ICSE.2013.6606607
- 2013
Scaling agile methods to regulated environments - an industry case study.:
- https://doi.org/10.1109/ICSE.2013.6606635
- 2013
Seahawk - stack overflow in the IDE.:
- https://doi.org/10.1109/ICSE.2013.6606701
- 2013
Search-based genetic optimization for deployment and reconfiguration of software in the cloud.:
- https://doi.org/10.1109/ICSE.2013.6606597
- 2013
Segmented symbolic analysis.:
- https://doi.org/10.1109/ICSE.2013.6606567
- 2013
? Selecting checkpoints along the time line - a novel temporal checkpoint selection
  strategy for monitoring a batch of parallel business processes.
: - https://doi.org/10.1109/ICSE.2013.6606698
  - 2013
SemFix - program repair via semantic analysis.:
- https://doi.org/10.1109/ICSE.2013.6606623
- 2013
Semantic smells and errors in access control models - a case study in PHP.:
- https://doi.org/10.1109/ICSE.2013.6606670
- 2013
Service networks for development communities.:
- https://doi.org/10.1109/ICSE.2013.6606691
- 2013
Situational awareness - personalizing issue tracking systems.:
- https://doi.org/10.1109/ICSE.2013.6606674
- 2013
Sketching software in the wild.:
- https://doi.org/10.1109/ICSE.2013.6606687
- 2013
Software analytics - achievements and challenges.:
- https://doi.org/10.1109/ICSE.2013.6606753
- 2013
Software metrics - pitfalls and best practices.:
- https://doi.org/10.1109/ICSE.2013.6606755
- 2013
Software requirement patterns.:
- https://doi.org/10.1109/ICSE.2013.6606758
- 2013
Strategies for product-line verification - case studies and experiments.:
- https://doi.org/10.1109/ICSE.2013.6606594
- 2013
Studios in software engineering education - towards an evaluable model.:
- https://doi.org/10.1109/ICSE.2013.6606656
- 2013
Studying the effect of co-change dispersion on software quality.:
- https://doi.org/10.1109/ICSE.2013.6606741
- 2013
Supporting application development with structured queries in the cloud.:
- https://doi.org/10.1109/ICSE.2013.6606681
- 2013
Supporting incremental programming with ghosts.:
- https://doi.org/10.1109/ICSE.2013.6606734
- 2013
Supporting maintenance tasks on transformational code generation environments.:
- https://doi.org/10.1109/ICSE.2013.6606719
- 2013
Supporting swift reaction - automatically uncovering performance problems by systematic experiments.:
- https://doi.org/10.1109/ICSE.2013.6606601
- 2013
Systematically selecting a software module during opportunistic reuse.:
- https://doi.org/10.1109/ICSE.2013.6606728
- 2013
Teaching and learning programming and software engineering via interactive gaming.:
- https://doi.org/10.1109/ICSE.2013.6606662
- 2013
Teaching developer skills in the first software engineering course.:
- https://doi.org/10.1109/ICSE.2013.6606661
- 2013
Teaching software process modeling.:
- https://doi.org/10.1109/ICSE.2013.6606665
- 2013
Teaching students global software engineering skills using distributed scrum.:
- https://doi.org/10.1109/ICSE.2013.6606664
- 2013
Technical debt - past, present, and future (panel).:
- https://doi.org/10.1109/ICSE.2013.6606634
- 2013
Temporal code completion and navigation.:
- https://doi.org/10.1109/ICSE.2013.6606673
- 2013
TestEvol - a tool for analyzing test-suite evolution.:
- https://doi.org/10.1109/ICSE.2013.6606703
- 2013
The connection between movie making and software development (keynote).:
- https://doi.org/10.1109/ICSE.2013.6606632
- 2013
The design of bug fixes.:
- https://doi.org/10.1109/ICSE.2013.6606579
- 2013
The role of domain knowledge and cross-functional communication in socio-technical coordination.:
- https://doi.org/10.1109/ICSE.2013.6606590
- 2013
Toddler - detecting performance problems via similar memory-access patterns.:
- https://doi.org/10.1109/ICSE.2013.6606602
- 2013
Toward a software product line for affective-driven self-adaptive systems.:
- https://doi.org/10.1109/ICSE.2013.6606722
- 2013
Towards automated testing and fixing of re-engineered feature models.:
- https://doi.org/10.1109/ICSE.2013.6606689
- 2013
Towards recognizing and rewarding efficient developer work patterns.:
- https://doi.org/10.1109/ICSE.2013.6606697
- 2013
Town hall discussion of SE 2004 revisions (panel).:
- https://doi.org/10.1109/ICSE.2013.6606663
- 2013
Transfer defect learning.:
- https://doi.org/10.1109/ICSE.2013.6606584
- 2013
UML in practice.:
- https://doi.org/10.1109/ICSE.2013.6606618
- 2013
Understanding and simulating software evolution.:
- https://doi.org/10.1109/ICSE.2013.6606730
- 2013
Understanding regression failures through test-passing and test-failing code changes.:
- https://doi.org/10.1109/ICSE.2013.6606672
- 2013
Unifying FSM-inference algorithms through declarative specification.:
- https://doi.org/10.1109/ICSE.2013.6606571
- 2013
User involvement in software evolution practice - a case study.:
- https://doi.org/10.1109/ICSE.2013.6606645
- 2013
Using mutation analysis for a model-clone detector comparison framework.:
- https://doi.org/10.1109/ICSE.2013.6606693
- 2013
V - ISSUE - LIZER - exploring requirements clarification in online communication over time.:
- https://doi.org/10.1109/ICSE.2013.6606709
- 2013
Vulnerability of the day - concrete demonstrations for software engineering undergraduates.:
- https://doi.org/10.1109/ICSE.2013.6606667
- 2013
What good are strong specifications?:
- https://doi.org/10.1109/ICSE.2013.6606572
- 2013
Why did this code change?:
- https://doi.org/10.1109/ICSE.2013.6606676
- 2013
Why don&apos;t software developers use static analysis tools to find bugs?:
- https://doi.org/10.1109/ICSE.2013.6606613
- 2013
X-PERT - accurate identification of cross-browser issues in web applications.:
- https://doi.org/10.1109/ICSE.2013.6606616
- 2013
YODA - young and newcomer developer assistant.:
- https://doi.org/10.1109/ICSE.2013.6606710
- 2013
